HTML Help
----------------
HTML 5 authors would use simple syntax to specify 
DOCTYPE as follows:
<!DOCTYPE html>

The above syntax is case-insensitive.
------------------------

HTML 5 authors can use simple syntax to specify 
Character Encoding as follows −
<meta charset="UTF-8">
----------------------------

It's common practice to add a type attribute with a 
value of "text/javascript" to script
elements as follows −

<script type="text/javascript" src="scriptfile.js"></script>

in HTML5 removing extra information
<script src="scriptfile.js"></script>
-----------------------------------------

<link rel="stylesheet" type="text/css" href="stylefile.css">

in HTML5 removing extra information
<link rel="stylesheet" href="stylefile.css">

The following tags have been introduced for better structure −

section: This tag represents a generic document or 
application section. It can be used together with h1-h6 
to indicate the document structure.

article: This tag represents an independent piece of content 
of a document, such as a blog entry or newspaper article.

aside: This tag represents a piece of content that is only 
slightly related to the rest of the page.

header: This tag represents the header of a section.

footer: This tag represents a footer for a section and can 
contain information about the author, 
copyright information, et cetera.

nav: This tag represents a section of the document intended 
for navigation. 

dialog: This tag can be used to mark up a conversation.

figure: This tag can be used to associate a caption together 
with some embedded content, such as a graphic or video.

---------------------------------

Block Level Elements
--------------------------------
<div class="example">...</div>


Inline Elements
--------------------------------
<block class="example">...</block>



Events Elements (Using Scripts)
--------------------------------
onclick
ondblclick
onchange
onabort
onfocus
onblur
onmousedown
onmousemove
onmouseover
onmousewheel
onerror
onkeydown
onkeyup
onkeypress
onload
onscroll




HTML Forms
--------------------------------
input (text, password, checkbox, radio, submit, reset, file, hidden)
<input type="text" name="search" autofocus/>
<input type="datetime" name="dt" id="dt" placeholder="dd-mm-yy" />
types: (date, datetime, time, month, week, number, range, email, url)

textarea
select (option)
button
--------------------------------


Canvas in HTML5
--------------------
HTML5 element <canvas> gives you an easy and powerful way to draw 
graphics using JavaScript. It can be used to draw graphs, make photo 
compositions or do simple (and not so simple) animations.

Here is a simple <canvas> element which has only two specific
attributes width and height plus all the core HTML5 attributes 
like id, name and class, etc.

<canvas id="mycanvas" width="100" height="100"></canvas>

var canvas = document.getElementById("mycanvas");
------
<!DOCTYPE HTML>
<html>
 <head>
 <style>
 #mycanvas{border:1px solid red;}
 </style>
 </head>
 <body>
 <canvas id="mycanvas" width="100" height="100"></canvas>
 </body>
</html>

-------------------------------------




AJAX with HTML and JavaScript
==============================

The common properties of XMLHttpRequest object are as follows:

Property			Description
--------			------------
onReadyStateChange	It is called whenever readystate attribute changes. 
					It must not be used with synchronous requests.
readyState			represents the state of the request. 
					It ranges from 0 to 4.
					0 UNOPENED open() is not called.
					1 OPENED open is called but send() is not called.
					2 HEADERS_RECEIVED send() is called, and headers 
					  and status are available.
					3 LOADING Downloading data; responseText holds the data.
					4 DONE The operation is completed fully.

reponseText			returns response as text.
responseXML			returns response as XML


-----------------------
The important methods of XMLHttpRequest 
object are as follows:
-----------------------
Method							Description
--------						------------
void open(method, URL)			opens the request specifying get or post 
								method and url.
void open(method, URL, async)	same as above but specifies 
								asynchronous or not.
void open(method, URL, async, username, password)	
								same as above but specifies 
								username and password.
void send()						sends get request.
void send(string)				send post request.
setRequestHeader(header,value)	it adds request headers.


----------------------------
How AJAX works internally
----------------------------
1.) User sends a request from the UI and a javascript call 
    goes to XMLHttpRequest object.
2.) HTTP Request is sent to the server by XMLHttpRequest object.
3.) Server interacts with the database using JSP, PHP, Servlet, ASP.net etc.
4.) Data is retrieved.
5.) Server sends XML data or JSON data to 
    the XMLHttpRequest callback function.
6.) HTML and CSS data is displayed on the browser.
